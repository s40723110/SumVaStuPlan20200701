var tipuesearch = {"pages":[{"title":"About","text":"SumVaStuPlan20000701 blogger: <a href=\"https://40723110svsp.blogspot.com","tags":"misc","url":"./pages/about/"},{"title":"代理主機維護策略","text":"test","tags":"Network","url":"./40723110.html"},{"title":"代理主機維護策略","text":"2018 Fall 一開始, 在一台已經 10 年的 32 位元的 Windows 7 操作系統中工作. 可攜的 Python 3.7.0 仍然可以配置, Leo Editor、PyQt5、flask、Markdown、pelican 與 bs4 的安裝, 也都沒有問題. 只有 Eric6 因為缺少必要模組與 Python 3.7.0 對應的 pyqt5-tools, 因此沒有安裝. 電腦規格 目前系上已經沒有 32 位元 Windows 操作系統的電腦, 所以先前只要有學生提到所使用的電腦是舊型 32 位元的 Windows XP 或 Windows 7, 都無法提供相應的可攜程式系統. 但是, 當您桌上就只一台早期 Sony 推出的 VGC-LM26T 電腦, 採用 Intel core 2 Duo T8100 2.1 GHz 裝載 32 位元 Windows 7, 記憶體只有 2GB 的老舊電腦. 夠用嗎? 當然可以, 使用的是特別製作的 32 位元可攜系統 , 除了不支援 Eric6 之外, 其餘功能都與 64 位元的 p37 相同. 工作流程 從 2018 Fall 開始, 前半學期希望每位計算機程課程的學員, 都能透過 2018 計算機程式教材 內容, 深入學習 Python 3 各種程式語法, 利用 CMSimfly 、 Pelican 與 Reveal.js , 熟悉如何在 Github 配置自己的網站、網誌與網際簡報系統. 使用時, 啟動隨身系統的 start.bat, 利用命令列指令, git clone https://github.com/mdecourse/2018fall, 然後將內容配置在各自的 Github 帳號下. 程式專案 早在 1999 年, 就已經開始進行所謂 網際機械設計資源中心 的構建, 想像中的資源中心是一套網際專家系統, 包含各式機械設計流程中所需的模組, 全部依附在一個相對穩定, 可以持續改進的核心架構下, 類似 docassemble 的一套系統. 將近二十年過去, 網際機械設計資源中心 始終仍只有片段系統, 其中包含 CMSimfly 、 Pygrouf 與 Pyslvs ( Pyslvs 手冊 )等相關專案. 就如同 如何寫出有用的程式? 一文中所述, \"沒有興趣不要來念資工\" 是一句非常貼切的警語, 當學生對於程式設計提不起興趣, 沒有將所學的各式語法、資料結構與演算法, 套用在自己非常有興趣的領域中, 用來解決各式問題的話, 日復一日, 我們還是寫不出任何有用的程式! 早該起頭的重要工作 計算機程式的重要性 其實已經無需爭辯, 人類未來的許多工作都是透過網路與數位運算達成, 既知趨勢如此, 每一位工程師就該越早起頭原本就該進行的重要工作, 透過計算機程式來解決問題, 構築一個值得長期投注心力的程式專案.","tags":"Network","url":"./20200709.html"},{"title":"代理主機維護策略","text":"2018 Fall 一開始, 在一台已經 10 年的 32 位元的 Windows 7 操作系統中工作. 可攜的 Python 3.7.0 仍然可以配置, Leo Editor、PyQt5、flask、Markdown、pelican 與 bs4 的安裝, 也都沒有問題. 只有 Eric6 因為缺少必要模組與 Python 3.7.0 對應的 pyqt5-tools, 因此沒有安裝. 電腦規格 目前系上已經沒有 32 位元 Windows 操作系統的電腦, 所以先前只要有學生提到所使用的電腦是舊型 32 位元的 Windows XP 或 Windows 7, 都無法提供相應的可攜程式系統. 但是, 當您桌上就只一台早期 Sony 推出的 VGC-LM26T 電腦, 採用 Intel core 2 Duo T8100 2.1 GHz 裝載 32 位元 Windows 7, 記憶體只有 2GB 的老舊電腦. 夠用嗎? 當然可以, 使用的是特別製作的 32 位元可攜系統 , 除了不支援 Eric6 之外, 其餘功能都與 64 位元的 p37 相同. 工作流程 從 2018 Fall 開始, 前半學期希望每位計算機程課程的學員, 都能透過 2018 計算機程式教材 內容, 深入學習 Python 3 各種程式語法, 利用 CMSimfly 、 Pelican 與 Reveal.js , 熟悉如何在 Github 配置自己的網站、網誌與網際簡報系統. 使用時, 啟動隨身系統的 start.bat, 利用命令列指令, git clone https://github.com/mdecourse/2018fall, 然後將內容配置在各自的 Github 帳號下. 程式專案 早在 1999 年, 就已經開始進行所謂 網際機械設計資源中心 的構建, 想像中的資源中心是一套網際專家系統, 包含各式機械設計流程中所需的模組, 全部依附在一個相對穩定, 可以持續改進的核心架構下, 類似 docassemble 的一套系統. 將近二十年過去, 網際機械設計資源中心 始終仍只有片段系統, 其中包含 CMSimfly 、 Pygrouf 與 Pyslvs ( Pyslvs 手冊 )等相關專案. 就如同 如何寫出有用的程式? 一文中所述, \"沒有興趣不要來念資工\" 是一句非常貼切的警語, 當學生對於程式設計提不起興趣, 沒有將所學的各式語法、資料結構與演算法, 套用在自己非常有興趣的領域中, 用來解決各式問題的話, 日復一日, 我們還是寫不出任何有用的程式! 早該起頭的重要工作 計算機程式的重要性 其實已經無需爭辯, 人類未來的許多工作都是透過網路與數位運算達成, 既知趨勢如此, 每一位工程師就該越早起頭原本就該進行的重要工作, 透過計算機程式來解決問題, 構築一個值得長期投注心力的程式專案.","tags":"Network","url":"./20200708.html"},{"title":"硬碟對拷","text":"七月六號 硬碟對拷 本機複製 & 網路複製 本機複製 工具 : Clonezilla 相較其他備份或還原軟體，Clonezilla 相對的較快、自由且免費，但是還是有許多限制，比如 : 被備份的分割區須等於或大於原先的分割區、目前只有同步備份沒有可調差異的的備份，還有被備份的分割區需在沒被掛載的情況下等等 ... ... 。 網路複製 本機開機後 F10 進入開機選單，被拷貝端的電腦使用 F9 進入，用網路線連結兩台電腦 ( 各插網路阜 ) 後本機選取「網路拷貝」，確認該介面的相關資訊後 ( Ipv、拷貝環境、網卡 ... ) ... ) 按確認後導入網路拷貝的設置介面，再接著使用網路拷貝。完成登錄後進到發送資料步驟，並確認相關需要設定後確定即可，設定完後須將電腦重新開機 ( 被傳輸一端 ) 。 以上流程 : https://s40723110.github.io/SumVaStuPlan20200701/content/%E4%B8%83%E6%9C%88%E5%85%AD%E8%99%9F.html Putty 在修改hosts 和 hostname 裡的主機對應名稱後用 ssh 連線 cad1 ，在 IPV6 及IPV4 下皆可連上 cad1、cad2 ...，因為當天可能是 1 的部分還不是 proxy server，所以在當天IPV6 要連線時不用設，而 IPV4 要 。","tags":"Network","url":"./20200706.html"},{"title":"接續七月四號主題","text":"七月五號 (接續七月四號主題) 為了瞭解運動矩之間的向量(包括不同平面間 ) 的關係，參考 : https://www.youtube.com/watch?v=x7tkStus80U&feature=youtu.be 一開始在琢磨 line 31 行 : t = (f-e) * tan30 / 2.0 一開始不知道此行的 tan30 / 2 是怎麼來的， 參考上面影片後，發現有一平面向量與其他力臂向量在 \" 不同平面 \"，所以需要用轉換矩陣至不同平面上的方程式 轉換成同一平面上的向量方可推導公式 ， 所以此動作為帶入矩陣轉換方程式 。","tags":"Network","url":"./20200705.html"},{"title":"正向與逆向運動方程式","text":"目標 : 推導 delta printer 的正向與逆向運動方程式, 弄懂之後, 寫網誌或整理成網頁內容 https://www.marginallyclever.com/other/samples/fk-ik-test.html https://gist.github.com/hugs/4231272","tags":"Network","url":"./20200704.html"},{"title":"程式與正反向運動方程式","text":"七月四號 -2 程式與正反向運動方程式 line 5 : import math 引入 math 庫 line9~12 : e = 26.0 f = 69.0 re = 128.0 rf = 88.0 機構長度 line15~22 : 三角函數 lline 32 : dtr = pi / 180.0 徑度轉換 line 34~36 theta1 *= dtr theta2 *= dtr theta3 *= dtr *= 是python語法 ，指的是 θ = θ * pi / 180 line 51~53 w1 = y1 y1 + z1 z1 w2 = x2 x2 + y2 y2 + z2*z2 w3 = x3 x3 + y3 y3 + z3*z3 計算各軸可觸碰到的範圍 W1、2、3指的是三軸最大極限構成的長方體","tags":"Network","url":"./20200704-2.html"},{"title":"機台的Z軸校正","text":"7月2號 進度 : 目前在機台的Z軸校正上想要讓他對齊底板 ( 一張紙的空隙 ) ，但是發現裡面的預寫程式設定的 Z:337 一直無法被改變，所以我和國龍想要導入裡面的程式並加以修改，於是根據學長留下的專題報告書中所寫的內容想要導入 Configuration.h 檔案去修改，但是發現程式內容與書上有很大區別 (華倞學長後來跟我們說那是因為有很多新的功能 ) ，於是想要用 pronterface 去動它的Z軸設定。之後還有平台的不平解決方案代處理。 搜尋的相關網址 : https://forum.duet3d.com/topic/3800/resetting-the-origin-of-a-delta https://www.pronterface.com/ https://www.repetier.com/firmware/v100/config.php? http://download.repetier.com/files/host/win/setupRepetierHost_2_1_6.exe http://kliment.kapsi.fi/printrun/Printrun-win-18Nov2017.zip https://reprap.org/wiki/List_of_Firmware https://www.hindawi.com/journals/je/2019/5175323/ 七月學習事項 : (a) 學會複製磁區、網路 (b) clonezilia (c) keras 、 pytorch","tags":"Network","url":"./20200702.html"},{"title":"代理主機維護策略","text":"昨天又失去一台 HP 代理主機, 也就是編號 42 的 Squid Proxy Server. 因此目前只剩下 4, 53 與 69 等三台. 雙協定支援代理主機的需求 也許大家會存疑, 機械設計科系為何需要自行安裝維護網路代理主機？假如根據學校多年前回覆, 之所以拆掉校級的代理主機設置, 原因是聯外頻寬已經很足夠, 因此不需要網路代理主機. 但是, 這種假設是, 系上的 IPv4 數量足夠, 而大部分的外部伺服器都已經支援 IPv6, 但是對於平日電腦總數量超過 300 台的機械設計系, 希望上課時讓每一位學員都能將課程資料存取於 Github.com, 這兩個條件都不存在. 因此, 從電腦輔助設計室上課的需求來看, 採用 IPv4 NAT 的模式, 並無足夠的頻寬讓 至少 50 台電腦快速直接對 Github.com 連線, 而如眾所知, Github.com 目前尚不支援 IPv6 網路協定. 因此, 2-3 台能夠同時支援 IPv4 與 IPv6 網路協定的代理主機, 似乎是可行的方案之一. 維護全時運作主機的可能方案 假如以電腦輔助設計室每週 40 堂課計算, 其中只有至多 14 堂課需要使用網路代理主機, 理論上並沒有必要全時讓這些代理主機運作, 而只要維持一台連內 (69), 一台連外 (4), 其餘的 IPv4 伺服器 IP 位址, 可以交由每班中至多 5 個分組的組長, 以虛擬主機 bridged 網路的方式各自管理分組中的代理主機, 其中可能的編號將有 (24, 32, 34, 39, 42）等五台. 其中, 因為在上學期的課程有大一的計算機程式與大二的電腦輔助設計實習課程, 而下學期的課程則有大一的網際內容管理與大二的協同產品設計實習, 正好可以在各課程中安排學長與學弟妹共同維護這五台代理主機的互動傳承內容. Squid 代理主機的安裝 以 Ubuntu 20.04 伺服器主機為例, 安裝 Squid Proxy 伺服器: sudo apt install squid 接下來, 利用 /etc/squid/squid.conf 進行配置: # 定義可以連線電腦網路位置範圍或特定 IP acl cad_lab src 192.130.17.0/24 acl cad_lab src 192.127.237.33 acl cad_lab src 2001:288::/64 # 定義可以連線通過的埠號 acl SSL_ports port 443 acl Safe_ports port 80 # http acl Safe_ports port 88 acl Safe_ports port 89 #acl Safe_ports port 21 # ftp acl SSL_ports port 8843 acl SSL_ports port 5443 acl SSL_ports port 8443 acl Safe_ports port 8443 acl SSL_ports port 9443 acl Safe_ports port 9443 acl SSL_ports port 22 acl Safe_ports port 22 acl Safe_ports port 443 # https acl Safe_ports port 1025-65535 # unregistered ports acl Safe_ports port 280 # http-mgmt acl Safe_ports port 488 # gss-http acl Safe_ports port 591 # filemaker acl Safe_ports port 777 # multiling http acl CONNECT method CONNECT # 除了前面定義的安全埠號外, 一律拒絕連線 # Deny requests to certain unsafe ports http_access deny !Safe_ports # 除了前面定義的安全埠號外, 一律不准連線 # Deny CONNECT to other than secure SSL ports http_access deny CONNECT !SSL_ports # 只允許前面定義的網路 IP 電腦連線, 其餘一律禁止 http_access allow cad_lab http_access deny all # Only allow cachemgr access from localhost http_access allow localhost manager http_access deny manager #http_access allow localnet http_access allow localhost # And finally deny all other access to this proxy http_access deny all # Squid normally listens to port 3128 http_port 3128 #cache_dir ufs /var/spool/squid 100 16 256 icp_port 3130 icp_access allow all cache_dir ufs /var/spool/squid 2000 16 256 cache_peer 192.130.17.4 sibling 3128 3130 cache_peer 192.130.17.42 sibling 3128 3130 cache_peer 192.130.17.53 sibling 3128 3130 # # Add any of your own refresh_pattern entries above these. # refresh_pattern &#94;ftp: 1440 20% 10080 refresh_pattern &#94;gopher: 1440 0% 1440 refresh_pattern -i (/cgi-bin/|\\?) 0 0% 0 refresh_pattern (Release|Packages(.gz)*)$ 0 20% 2880 refresh_pattern . 0 20% 4320 max_filedesc 40960 cache_mem 4000 MB 修改 /etc/squid/squid.conf 後, 以: sudo systemctl restart squid 重新啟動. 假如要讓 Virtualbox 虛擬主機與 Windows 10 host 啟動開啟虛擬代理主機, 可以設定使用 VBoxVmService , 但是 5.X 的 Virtualbox 必須與 VBoxVmService 5.X 版配合, 而 6.X 的版本也必須互動升級配置. 後記: 42 是一台 HP ML 30 gen9 的機器, 2017 安裝的 Ubuntu 在前幾天停止運作後, 直接將 Host 裝上 Win 10, 因無法從 USB 安裝, 只能用 blueray dvd 重新安裝, 然後外部設為 39, 然後將虛擬 proxy 伺服器設為 42, 目前仍然加入服役中.","tags":"Network","url":"./dfhdgdjdjfjdj.html"},{"title":"代理主機維護策略","text":"昨天又失去一台 HP 代理主機, 也就是編號 42 的 Squid Proxy Server. 因此目前只剩下 4, 53 與 69 等三台. 雙協定支援代理主機的需求 也許大家會存疑, 機械設計科系為何需要自行安裝維護網路代理主機？假如根據學校多年前回覆, 之所以拆掉校級的代理主機設置, 原因是聯外頻寬已經很足夠, 因此不需要網路代理主機. 但是, 這種假設是, 系上的 IPv4 數量足夠, 而大部分的外部伺服器都已經支援 IPv6, 但是對於平日電腦總數量超過 300 台的機械設計系, 希望上課時讓每一位學員都能將課程資料存取於 Github.com, 這兩個條件都不存在. 因此, 從電腦輔助設計室上課的需求來看, 採用 IPv4 NAT 的模式, 並無足夠的頻寬讓 至少 50 台電腦快速直接對 Github.com 連線, 而如眾所知, Github.com 目前尚不支援 IPv6 網路協定. 因此, 2-3 台能夠同時支援 IPv4 與 IPv6 網路協定的代理主機, 似乎是可行的方案之一. 維護全時運作主機的可能方案 假如以電腦輔助設計室每週 40 堂課計算, 其中只有至多 14 堂課需要使用網路代理主機, 理論上並沒有必要全時讓這些代理主機運作, 而只要維持一台連內 (69), 一台連外 (4), 其餘的 IPv4 伺服器 IP 位址, 可以交由每班中至多 5 個分組的組長, 以虛擬主機 bridged 網路的方式各自管理分組中的代理主機, 其中可能的編號將有 (24, 32, 34, 39, 42）等五台. 其中, 因為在上學期的課程有大一的計算機程式與大二的電腦輔助設計實習課程, 而下學期的課程則有大一的網際內容管理與大二的協同產品設計實習, 正好可以在各課程中安排學長與學弟妹共同維護這五台代理主機的互動傳承內容. Squid 代理主機的安裝 以 Ubuntu 20.04 伺服器主機為例, 安裝 Squid Proxy 伺服器: sudo apt install squid 接下來, 利用 /etc/squid/squid.conf 進行配置: # 定義可以連線電腦網路位置範圍或特定 IP acl cad_lab src 192.130.17.0/24 acl cad_lab src 192.127.237.33 acl cad_lab src 2001:288::/64 # 定義可以連線通過的埠號 acl SSL_ports port 443 acl Safe_ports port 80 # http acl Safe_ports port 88 acl Safe_ports port 89 #acl Safe_ports port 21 # ftp acl SSL_ports port 8843 acl SSL_ports port 5443 acl SSL_ports port 8443 acl Safe_ports port 8443 acl SSL_ports port 9443 acl Safe_ports port 9443 acl SSL_ports port 22 acl Safe_ports port 22 acl Safe_ports port 443 # https acl Safe_ports port 1025-65535 # unregistered ports acl Safe_ports port 280 # http-mgmt acl Safe_ports port 488 # gss-http acl Safe_ports port 591 # filemaker acl Safe_ports port 777 # multiling http acl CONNECT method CONNECT # 除了前面定義的安全埠號外, 一律拒絕連線 # Deny requests to certain unsafe ports http_access deny !Safe_ports # 除了前面定義的安全埠號外, 一律不准連線 # Deny CONNECT to other than secure SSL ports http_access deny CONNECT !SSL_ports # 只允許前面定義的網路 IP 電腦連線, 其餘一律禁止 http_access allow cad_lab http_access deny all # Only allow cachemgr access from localhost http_access allow localhost manager http_access deny manager #http_access allow localnet http_access allow localhost # And finally deny all other access to this proxy http_access deny all # Squid normally listens to port 3128 http_port 3128 #cache_dir ufs /var/spool/squid 100 16 256 icp_port 3130 icp_access allow all cache_dir ufs /var/spool/squid 2000 16 256 cache_peer 192.130.17.4 sibling 3128 3130 cache_peer 192.130.17.42 sibling 3128 3130 cache_peer 192.130.17.53 sibling 3128 3130 # # Add any of your own refresh_pattern entries above these. # refresh_pattern &#94;ftp: 1440 20% 10080 refresh_pattern &#94;gopher: 1440 0% 1440 refresh_pattern -i (/cgi-bin/|\\?) 0 0% 0 refresh_pattern (Release|Packages(.gz)*)$ 0 20% 2880 refresh_pattern . 0 20% 4320 max_filedesc 40960 cache_mem 4000 MB 修改 /etc/squid/squid.conf 後, 以: sudo systemctl restart squid 重新啟動. 假如要讓 Virtualbox 虛擬主機與 Windows 10 host 啟動開啟虛擬代理主機, 可以設定使用 VBoxVmService , 但是 5.X 的 Virtualbox 必須與 VBoxVmService 5.X 版配合, 而 6.X 的版本也必須互動升級配置. 後記: 42 是一台 HP ML 30 gen9 的機器, 2017 安裝的 Ubuntu 在前幾天停止運作後, 直接將 Host 裝上 Win 10, 因無法從 USB 安裝, 只能用 blueray dvd 重新安裝, 然後外部設為 39, 然後將虛擬 proxy 伺服器設為 42, 目前仍然加入服役中.","tags":"Network","url":"./stratege-for-proxy-servers.html"},{"title":"2018 Fall CP 課程","text":"2018 Fall 一開始, 在一台已經 10 年的 32 位元的 Windows 7 操作系統中工作. 可攜的 Python 3.7.0 仍然可以配置, Leo Editor、PyQt5、flask、Markdown、pelican 與 bs4 的安裝, 也都沒有問題. 只有 Eric6 因為缺少必要模組與 Python 3.7.0 對應的 pyqt5-tools, 因此沒有安裝. 電腦規格 目前系上已經沒有 32 位元 Windows 操作系統的電腦, 所以先前只要有學生提到所使用的電腦是舊型 32 位元的 Windows XP 或 Windows 7, 都無法提供相應的可攜程式系統. 但是, 當您桌上就只一台早期 Sony 推出的 VGC-LM26T 電腦, 採用 Intel core 2 Duo T8100 2.1 GHz 裝載 32 位元 Windows 7, 記憶體只有 2GB 的老舊電腦. 夠用嗎? 當然可以, 使用的是特別製作的 32 位元可攜系統 , 除了不支援 Eric6 之外, 其餘功能都與 64 位元的 p37 相同. 工作流程 從 2018 Fall 開始, 前半學期希望每位計算機程課程的學員, 都能透過 2018 計算機程式教材 內容, 深入學習 Python 3 各種程式語法, 利用 CMSimfly 、 Pelican 與 Reveal.js , 熟悉如何在 Github 配置自己的網站、網誌與網際簡報系統. 使用時, 啟動隨身系統的 start.bat, 利用命令列指令, git clone https://github.com/mdecourse/2018fall, 然後將內容配置在各自的 Github 帳號下. 程式專案 早在 1999 年, 就已經開始進行所謂 網際機械設計資源中心 的構建, 想像中的資源中心是一套網際專家系統, 包含各式機械設計流程中所需的模組, 全部依附在一個相對穩定, 可以持續改進的核心架構下, 類似 docassemble 的一套系統. 將近二十年過去, 網際機械設計資源中心 始終仍只有片段系統, 其中包含 CMSimfly 、 Pygrouf 與 Pyslvs ( Pyslvs 手冊 )等相關專案. 就如同 如何寫出有用的程式? 一文中所述, \"沒有興趣不要來念資工\" 是一句非常貼切的警語, 當學生對於程式設計提不起興趣, 沒有將所學的各式語法、資料結構與演算法, 套用在自己非常有興趣的領域中, 用來解決各式問題的話, 日復一日, 我們還是寫不出任何有用的程式! 早該起頭的重要工作 計算機程式的重要性 其實已經無需爭辯, 人類未來的許多工作都是透過網路與數位運算達成, 既知趨勢如此, 每一位工程師就該越早起頭原本就該進行的重要工作, 透過計算機程式來解決問題, 構築一個值得長期投注心力的程式專案.","tags":"Misc","url":"./2018-Fall-32-bit-Windows.html"}]};